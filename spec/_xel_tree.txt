
987 ⟶   [ "num", "987" ]
3,000,000 ⟶   [ "num", "3,000,000" ]
123.45 ⟶   [ "num", "123.45" ]
9,090.10 ⟶   [ "num", "9,090.10" ]
.123 ⟶   [ "num", ".123" ]
-987 ⟶   [ "num", "-987" ]
-3,000,000 ⟶   [ "num", "-3,000,000" ]
-123.45 ⟶   [ "num", "-123.45" ]
-9,090.10 ⟶   [ "num", "-9,090.10" ]
-.123 ⟶   [ "num", "-.123" ]

a ⟶   [ "var", "a" ]
ab ⟶   [ "var", "ab" ]
ab.cd ⟶   [ "var", "ab.cd" ]

"a" IN { "alpha", "bravo" } ⟶   [
  "cmp","IN",["str","a"],["arr",["str","alpha"],["str","bravo"]]]

"ab\"cd'ef" ⟶   [
  "str", "ab\"cd'ef"]

'ab"cd\'ef' ⟶   [
  "str", "ab\"cd'ef"]

'ab' =~ '[a-z]' ⟶   [
  "cmp", "=~", ["str", "ab"], ["str", "[a-z]"]]

(10 + 11) * 12 ⟶   [
  "MUL", ["plus", ["num", "10"], ["num", "11"]], ["num", "12"]]

0.45 * we_c - 0.15 * it_c + 0.15 * sm_c + 0.25 * gp_c ⟶   [
  "plus",
   ["MUL", ["num", "0.45"], ["var", "we_c"]],
   ["opp", ["MUL", ["num", "0.15"], ["var", "it_c"]]],
   ["MUL", ["num", "0.15"], ["var", "sm_c"]],
   ["MUL", ["num", "0.25"], ["var", "gp_c"]]]

1 * 2 + 3 ⟶   [
  "plus", ["MUL", ["num", "1"], ["num", "2"]], ["num", "3"]]

1 + 2 * 3 ⟶   [
  "plus", ["num", "1"], ["MUL", ["num", "2"], ["num", "3"]]]

1 + 2 < 3 ⟶   [
  "cmp", "<", ["plus", ["num", "1"], ["num", "2"]], ["num", "3"]]

1 + a ⟶   [
  "plus", ["num", "1"], ["var", "a"]]

1 + a.b.c ⟶   [
  "plus", ["num", "1"], ["var", "a.b.c"]]

"a" & "bc" ⟶   [
  "amp", ["str", "a"], ["str", "bc"]]

1 & 1 ⟶   [
  "amp", ["num", "1"], ["num", "1"]]

10 ⟶   [
  "num", "10"]

10 + 11 ⟶   [
  "plus", ["num", "10"], ["num", "11"]]

10 + 11 * 12 ⟶   [
  "plus", ["num", "10"], ["MUL", ["num", "11"], ["num", "12"]]]

10 + IF(ntac='no', 10, 0) ⟶   [
  "plus",
   ["num", "10"],
   ["IF",
    ["cmp", "=", ["var", "ntac"], ["str", "no"]],
    ["num", "10"],
    ["num", "0"]]]

10 + SUM(1, 2) ⟶   [
  "plus", ["num", "10"], ["SUM", ["num", "1"], ["num", "2"]]]

10 - -11 ⟶   [
  "plus", ["num", "10"], ["opp", ["num", "-11"]]]

10 / -11 ⟶   [
  "MUL", ["num", "10"], ["inv", ["num", "-11"]]]

12.3 ⟶   [
  "num", "12.3"]

IF(ntac='no', 10, 0) ⟶   [
  "IF",
   ["cmp", "=", ["var", "ntac"], ["str", "no"]],
   ["num", "10"],
   ["num", "0"]]

SUM(1 + 2, 3, SUM(4, 5)) ⟶   [
  "SUM",
   ["plus", ["num", "1"], ["num", "2"]],
   ["num", "3"],
   ["SUM", ["num", "4"], ["num", "5"]]]

SUM(3,000,000, 2) ⟶   [
  "SUM", ["num", "3,000,000"], ["num", "2"]]

{ 1, 2, 3 } + { 3, 4, 5 } ⟶   [
  "plus",
   ["arr", ["num", "1"], ["num", "2"], ["num", "3"]],
   ["arr", ["num", "3"], ["num", "4"], ["num", "5"]]]

ntac = 'no' ⟶   [
  "cmp", "=", ["var", "ntac"], ["str", "no"]]

{1,"a", "b", 2, 0, "d" } ⟶   [
  "arr",
   ["num", "1"],
   ["str", "a"],
   ["str", "b"],
   ["num", "2"],
   ["num", "0"],
   ["str", "d"]]

LAMBDA(a, b, a + b) ⟶   [
  "LAMBDA", ["var", "a"], ["var", "b"], ["plus", ["var", "a"], ["var", "b"]]]

LET(l, LAMBDA(a, b, a + b), l(2, 3)) ⟶   [
  "LET",
   ["var", "l"],
   ["LAMBDA", ["var", "a"], ["var", "b"], ["plus", ["var", "a"], ["var", "b"]]],
   ["l", ["num", "2"], ["num", "3"]]]

LET(_l, LAMBDA(a, b, a + b), _l(2, 3)) ⟶   [
  "LET",
   ["var", "_l"],
   ["LAMBDA", ["var", "a"], ["var", "b"], ["plus", ["var", "a"], ["var", "b"]]],
   ["_l", ["num", "2"], ["num", "3"]]]


# vim: syntax=xel_tree

